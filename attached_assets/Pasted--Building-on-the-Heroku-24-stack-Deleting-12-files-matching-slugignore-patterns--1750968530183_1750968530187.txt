
-----> Building on the Heroku-24 stack
-----> Deleting 12 files matching .slugignore patterns.
-----> Using buildpack: heroku/nodejs
-----> Node.js app detected
       
-----> Creating runtime environment
       
       NPM_CONFIG_PRODUCTION=false
       NPM_CONFIG_LOGLEVEL=error
       NODE_VERBOSE=false
       NODE_ENV=production
       NODE_MODULES_CACHE=true
       
-----> Installing binaries
       engines.node (package.json):   22.x
       engines.npm (package.json):    10.x
       
       Resolving node version 22.x...
       Downloading and installing node 22.17.0...
       Bootstrapping npm 10.x (replacing 10.9.2)...
npm warn config production Use `--omit=dev` instead.
       npm 10.9.3 installed
       
-----> Restoring cache
       - npm cache
       
-----> Installing dependencies
       Installing node modules
       
       added 1188 packages, and audited 1189 packages in 19s
       
       113 packages are looking for funding
         run `npm fund` for details
       
       8 vulnerabilities (1 low, 7 moderate)
       
       To address issues that do not require attention, run:
         npm audit fix
       
       To address all issues (including breaking changes), run:
         npm audit fix --force
       
       Run `npm audit` for details.
       
-----> Build
       Running build
       
       > rest-express@1.0.0 build
       > node heroku-build.cjs
       
       Starting simplified Heroku build...
       Ensuring logos are available...
       ✓ azul-logo-oficial.png ready for build
       ✓ sbt_logo.png ready for build
       Building React frontend...
       vite v5.4.14 building for production...
       transforming...
       ✓ 1641 modules transformed.
       rendering chunks...
       computing gzip size...
       ../dist/public/index.html                  0.46 kB │ gzip:   0.31 kB
       ../dist/public/assets/main-C4CK95On.css    1.73 kB │ gzip:   0.57 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
       ../dist/public/assets/main-D84imG9b.js   515.97 kB │ gzip: 140.84 kB
       ✓ built in 2.24s
       ✓ React build successful
       Building backend...
▲ [WARNING] "import.meta" is not available with the "cjs" output format and will be empty [empty-import-meta]
    server/vite.ts:24:32:
      24 │ ...t distPath = path.resolve(import.meta.dirname, "..", "dist", "p...
         ╵                              ~~~~~~~~~~~
  You need to set the output format to "esm" for "import.meta" to work correctly.
✘ [ERROR] Top-level await is currently not supported with the "cjs" output format
    vite.config.ts:13:10:
      13 │           await import("@replit/vite-plugin-cartographer").then((m...
         ╵           ~~~~~
▲ [WARNING] "import.meta" is not available with the "cjs" output format and will be empty [empty-import-meta]
    vite.config.ts:21:24:
      21 │       "@": path.resolve(import.meta.dirname, "client", "src"),
         ╵                         ~~~~~~~~~~~
  You need to set the output format to "esm" for "import.meta" to work correctly.
▲ [WARNING] "import.meta" is not available with the "cjs" output format and will be empty [empty-import-meta]
    vite.config.ts:22:30:
      22 │       "@shared": path.resolve(import.meta.dirname, "shared"),
         ╵                               ~~~~~~~~~~~
  You need to set the output format to "esm" for "import.meta" to work correctly.
▲ [WARNING] "import.meta" is not available with the "cjs" output format and will be empty [empty-import-meta]
    vite.config.ts:23:30:
      23 │ ...  "@assets": path.resolve(import.meta.dirname, "attached_assets"),
         ╵                              ~~~~~~~~~~~
  You need to set the output format to "esm" for "import.meta" to work correctly.
▲ [WARNING] "esbuild" should be marked as external for use with "require.resolve" [require-resolve-not-external]
    node_modules/vite/node_modules/esbuild/lib/main.js:1653:36:
      1653 │   const libMainJS = require.resolve("esbuild");
           ╵                                     ~~~~~~~~~
5 warnings and 1 error
node:child_process:958
    throw err;
    ^
Error: Command failed: npx esbuild server/index.ts --bundle --platform=node --target=node18 --outfile=dist/index.js --format=cjs --external:pg-native --external:sqlite3 --external:mysql2 --external:mysql --external:oracledb --external:tedious --external:pg-query-stream --external:@mapbox/node-pre-gyp --external:lightningcss --external:@babel/preset-typescript --external:@babel/core
    at genericNodeError (node:internal/errors:983:15)
    at wrappedFn (node:internal/errors:537:14)
    at checkExecSyncError (node:child_process:883:11)
    at execSync (node:child_process:955:15)
    at Object.<anonymous> (/tmp/build_25638205/heroku-build.cjs:47:1)
    at Module._compile (node:internal/modules/cjs/loader:1730:14)
    at Object..js (node:internal/modules/cjs/loader:1895:10)
    at Module.load (node:internal/modules/cjs/loader:1465:32)
    at Function._load (node:internal/modules/cjs/loader:1282:12)
    at TracingChannel.traceSync (node:diagnostics_channel:322:14) {
  status: 1,
  signal: null,
  output: [ null, null, null ],
  pid: 2209,
  stdout: null,
  stderr: null
}
Node.js v22.17.0
-----> Build failed
       
       We're sorry this build is failing! You can troubleshoot common issues here:
       https://devcenter.heroku.com/articles/troubleshooting-node-deploys
       
       If you're stuck, please submit a ticket so we can help:
       https://help.heroku.com/
       
       Love,
       Heroku
       
 !     Push rejected, failed to compile Node.js app.
 !     Push failed